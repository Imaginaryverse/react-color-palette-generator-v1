{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/HarmonyGenerator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PrimaryForm from './PrimaryForm';\nimport HarmonyColorCell from './HarmonyColorCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomHue = () => Math.floor(Math.random() * 360);\n\nconst getRandomNum = (min = 0, max = 100) => Math.floor(Math.random() * (min - max) + min);\n\nconst getPositiveCompHue = (hue, degrees) => {\n  return hue + degrees > 360 ? hue + degrees - 360 : hue + degrees;\n};\n/* const getPositiveCompLum = (lum, percent) => {\n  return lum + percent > 100 ? 100 : lum + percent;\n}; */\n\n\nconst getNegativeCompHue = (hue, degrees) => {\n  return hue - degrees < 0 ? hue - degrees + 360 : hue - degrees;\n};\n\nconst getNegativeCompLum = (lum, percent) => {\n  if (lum === 100) return 100;\n  return lum - percent < 0 ? 0 : lum - percent;\n};\n/* const formatHsl = (h, s, l) => {\n  return `hsl(${h}, ${s}%, ${l}%)`;\n}; */\n\n\nconst HarmonyGenerator = () => {\n  _s();\n\n  const [primaryHue, setPrimaryHue] = useState(0);\n  const [primarySat, setPrimarySat] = useState(0);\n  const [primaryLum, setPrimaryLum] = useState(0);\n  const [primaryColor, setPrimaryColor] = useState({\n    h: 0,\n    s: 0,\n    l: 0\n  });\n  const [posCompA, setPosCompA] = useState({\n    h: 0,\n    s: 0,\n    l: 0\n  });\n  const [posCompB, setPosCompB] = useState({\n    h: 0,\n    s: 0,\n    l: 0\n  });\n  const [negCompA, setNegCompA] = useState({\n    h: 0,\n    s: 0,\n    l: 0\n  });\n  const [negCompB, setNegCompB] = useState({\n    h: 0,\n    s: 0,\n    l: 0\n  });\n\n  const handleInputChange = (e, name) => {\n    switch (name) {\n      case 'hue':\n        setPrimaryHue(+e.target.value);\n        break;\n\n      case 'sat':\n        setPrimarySat(+e.target.value);\n        break;\n\n      case 'lum':\n        setPrimaryLum(+e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleRandomClick = e => {\n    e.preventDefault();\n    setPrimaryHue(getRandomHue());\n    setPrimarySat(getRandomNum(50, 100));\n    setPrimaryLum(getRandomNum(40, 80));\n  };\n\n  useEffect(() => {\n    setPrimaryHue(getRandomHue());\n    setPrimarySat(getRandomNum());\n    setPrimaryLum(getRandomNum());\n  }, []);\n  useEffect(() => {\n    setPrimaryColor({\n      h: primaryHue,\n      s: primarySat,\n      l: primaryLum\n    });\n    setPosCompA({\n      h: getPositiveCompHue(primaryHue, 135),\n      s: getNegativeCompLum(primarySat, 10),\n      l: primaryLum\n    });\n    setPosCompB({\n      h: getPositiveCompHue(primaryHue, 155),\n      s: primarySat,\n      l: getNegativeCompLum(primaryLum, 5)\n    });\n    setNegCompA({\n      h: getNegativeCompHue(primaryHue, 135),\n      s: getNegativeCompLum(primarySat, 10),\n      l: primaryLum\n    });\n    setNegCompB({\n      h: getNegativeCompHue(primaryHue, 155),\n      s: primarySat,\n      l: getNegativeCompLum(primaryLum, 5)\n    });\n  }, [primaryHue, primarySat, primaryLum]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"harmony-generator\",\n    children: [/*#__PURE__*/_jsxDEV(PrimaryForm, {\n      primaryHue: primaryHue,\n      primarySat: primarySat,\n      primaryLum: primaryLum,\n      handleInputChange: handleInputChange,\n      handleRandomClick: handleRandomClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"harmony-color-grid\",\n      children: [/*#__PURE__*/_jsxDEV(HarmonyColorCell, {\n        color: primaryColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HarmonyColorCell, {\n        color: posCompA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HarmonyColorCell, {\n        color: posCompB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HarmonyColorCell, {\n        color: negCompA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HarmonyColorCell, {\n        color: negCompB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarmonyGenerator, \"h6YjEUTQNQOhk4/MwjVT6hEisXM=\");\n\n_c = HarmonyGenerator;\nexport default HarmonyGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarmonyGenerator\");","map":{"version":3,"sources":["/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/HarmonyGenerator.js"],"names":["React","useState","useEffect","PrimaryForm","HarmonyColorCell","getRandomHue","Math","floor","random","getRandomNum","min","max","getPositiveCompHue","hue","degrees","getNegativeCompHue","getNegativeCompLum","lum","percent","HarmonyGenerator","primaryHue","setPrimaryHue","primarySat","setPrimarySat","primaryLum","setPrimaryLum","primaryColor","setPrimaryColor","h","s","l","posCompA","setPosCompA","posCompB","setPosCompB","negCompA","setNegCompA","negCompB","setNegCompB","handleInputChange","e","name","target","value","handleRandomClick","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PrimaryForm from './PrimaryForm';\nimport HarmonyColorCell from './HarmonyColorCell';\n\nconst getRandomHue = () => Math.floor(Math.random() * 360);\n\nconst getRandomNum = (min = 0, max = 100) =>\n  Math.floor(Math.random() * (min - max) + min);\n\nconst getPositiveCompHue = (hue, degrees) => {\n  return hue + degrees > 360 ? hue + degrees - 360 : hue + degrees;\n};\n\n/* const getPositiveCompLum = (lum, percent) => {\n  return lum + percent > 100 ? 100 : lum + percent;\n}; */\n\nconst getNegativeCompHue = (hue, degrees) => {\n  return hue - degrees < 0 ? hue - degrees + 360 : hue - degrees;\n};\n\nconst getNegativeCompLum = (lum, percent) => {\n  if (lum === 100) return 100;\n  return lum - percent < 0 ? 0 : lum - percent;\n};\n\n/* const formatHsl = (h, s, l) => {\n  return `hsl(${h}, ${s}%, ${l}%)`;\n}; */\n\nconst HarmonyGenerator = () => {\n  const [primaryHue, setPrimaryHue] = useState(0);\n  const [primarySat, setPrimarySat] = useState(0);\n  const [primaryLum, setPrimaryLum] = useState(0);\n  const [primaryColor, setPrimaryColor] = useState({ h: 0, s: 0, l: 0 });\n  const [posCompA, setPosCompA] = useState({ h: 0, s: 0, l: 0 });\n  const [posCompB, setPosCompB] = useState({ h: 0, s: 0, l: 0 });\n  const [negCompA, setNegCompA] = useState({ h: 0, s: 0, l: 0 });\n  const [negCompB, setNegCompB] = useState({ h: 0, s: 0, l: 0 });\n\n  const handleInputChange = (e, name) => {\n    switch (name) {\n      case 'hue':\n        setPrimaryHue(+e.target.value);\n        break;\n      case 'sat':\n        setPrimarySat(+e.target.value);\n        break;\n      case 'lum':\n        setPrimaryLum(+e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleRandomClick = e => {\n    e.preventDefault();\n    setPrimaryHue(getRandomHue());\n    setPrimarySat(getRandomNum(50, 100));\n    setPrimaryLum(getRandomNum(40, 80));\n  };\n\n  useEffect(() => {\n    setPrimaryHue(getRandomHue());\n    setPrimarySat(getRandomNum());\n    setPrimaryLum(getRandomNum());\n  }, []);\n\n  useEffect(() => {\n    setPrimaryColor({ h: primaryHue, s: primarySat, l: primaryLum });\n    setPosCompA({\n      h: getPositiveCompHue(primaryHue, 135),\n      s: getNegativeCompLum(primarySat, 10),\n      l: primaryLum,\n    });\n    setPosCompB({\n      h: getPositiveCompHue(primaryHue, 155),\n      s: primarySat,\n      l: getNegativeCompLum(primaryLum, 5),\n    });\n    setNegCompA({\n      h: getNegativeCompHue(primaryHue, 135),\n      s: getNegativeCompLum(primarySat, 10),\n      l: primaryLum,\n    });\n    setNegCompB({\n      h: getNegativeCompHue(primaryHue, 155),\n      s: primarySat,\n      l: getNegativeCompLum(primaryLum, 5),\n    });\n  }, [primaryHue, primarySat, primaryLum]);\n\n  return (\n    <section className='harmony-generator'>\n      {/* <div\n        className='primary-color-preview'\n        style={{\n          backgroundColor: formatHsl(primaryHue, primarySat, primaryLum),\n        }}\n      ></div> */}\n      <PrimaryForm\n        primaryHue={primaryHue}\n        primarySat={primarySat}\n        primaryLum={primaryLum}\n        handleInputChange={handleInputChange}\n        handleRandomClick={handleRandomClick}\n      />\n      <div className='harmony-color-grid'>\n        <HarmonyColorCell color={primaryColor} />\n        <HarmonyColorCell color={posCompA} />\n        <HarmonyColorCell color={posCompB} />\n        <HarmonyColorCell color={negCompA} />\n        <HarmonyColorCell color={negCompB} />\n      </div>\n    </section>\n  );\n};\n\nexport default HarmonyGenerator;\n"]},"metadata":{},"sourceType":"module"}