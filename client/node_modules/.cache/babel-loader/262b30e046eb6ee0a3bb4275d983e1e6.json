{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/HarmonyColorCell.js\";\nimport React from 'react';\nimport { hslToHex, hslToRgb } from '../utils/colorConverter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst hexToRgb = hex => hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (m, r, g, b) => '#' + r + r + g + g + b + b).substring(1).match(/.{2}/g).map(x => parseInt(x, 16));\n\nconst HarmonyColorCell = ({\n  color\n}) => {\n  const hex = hslToHex(color.h, color.s, color.l);\n  /* const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black',\n  }; */\n\n  console.log(hexToRgb(hex));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"harmony-color-cell\",\n    style: {\n      backgroundColor: hex\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: hex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HarmonyColorCell;\nexport default HarmonyColorCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarmonyColorCell\");","map":{"version":3,"sources":["/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/HarmonyColorCell.js"],"names":["React","hslToHex","hslToRgb","isDark","rgbArr","every","val","hexToRgb","hex","replace","m","r","g","b","substring","match","map","x","parseInt","HarmonyColorCell","color","h","s","l","console","log","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,yBAAnC;;;AAEA,MAAMC,MAAM,GAAGC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,GAAG,IAAIA,GAAG,GAAG,GAA1B,CAAzB;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAClBA,GAAG,CACAC,OADH,CAEI,kCAFJ,EAGI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,KAAgB,MAAMF,CAAN,GAAUA,CAAV,GAAcC,CAAd,GAAkBA,CAAlB,GAAsBC,CAAtB,GAA0BA,CAH9C,EAKGC,SALH,CAKa,CALb,EAMGC,KANH,CAMS,OANT,EAOGC,GAPH,CAOOC,CAAC,IAAIC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAPpB,CADF;;AAUA,MAAME,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACtC,QAAMZ,GAAG,GAAGP,QAAQ,CAACmB,KAAK,CAACC,CAAP,EAAUD,KAAK,CAACE,CAAhB,EAAmBF,KAAK,CAACG,CAAzB,CAApB;AACA;AACF;AACA;;AAEEC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACC,GAAD,CAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAE;AAAEkB,MAAAA,eAAe,EAAElB;AAAnB,KAA3C;AAAA,2BACE;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;KAAMW,gB;AAeN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { hslToHex, hslToRgb } from '../utils/colorConverter';\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst hexToRgb = hex =>\n  hex\n    .replace(\n      /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n      (m, r, g, b) => '#' + r + r + g + g + b + b\n    )\n    .substring(1)\n    .match(/.{2}/g)\n    .map(x => parseInt(x, 16));\n\nconst HarmonyColorCell = ({ color }) => {\n  const hex = hslToHex(color.h, color.s, color.l);\n  /* const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black',\n  }; */\n\n  console.log(hexToRgb(hex));\n\n  return (\n    <div className='harmony-color-cell' style={{ backgroundColor: hex }}>\n      <p>{hex}</p>\n    </div>\n  );\n};\n\nexport default HarmonyColorCell;\n"]},"metadata":{},"sourceType":"module"}