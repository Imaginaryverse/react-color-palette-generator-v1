{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/ColorCell.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUnlock, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { PalettesContext } from '../PalettesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst toHslString = (h, s, l) => `hsl(${h}, ${s}%, ${l}%)`;\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst ColorCell = ({\n  color,\n  toggleLocked\n}) => {\n  const name = color.color.name;\n  const hex = color.color.hex;\n  const hsl = color.color.hsl;\n  const rgb = color.color.rgb;\n  const bgStyle = {\n    backgroundColor: toHslString(hsl.h, hsl.s, hsl.l)\n  };\n  const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-cell\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn toggle-locked-btn\",\n      onClick: () => toggleLocked(color.num),\n      children: color.locked ? 'Unlock' : 'Lock'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-container__name\",\n        style: textStyle,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info-container__hex\",\n        style: textStyle,\n        children: hex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ColorCell;\nexport default ColorCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorCell\");","map":{"version":3,"sources":["/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/ColorCell.js"],"names":["React","FontAwesomeIcon","faUnlock","faLock","PalettesContext","toHslString","h","s","l","isDark","rgbArr","every","val","ColorCell","color","toggleLocked","name","hex","hsl","rgb","bgStyle","backgroundColor","textStyle","r","g","b","num","locked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mCAAjC;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAEA,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAc,OAAMF,CAAE,KAAIC,CAAE,MAAKC,CAAE,IAAvD;;AAEA,MAAMC,MAAM,GAAGC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,GAAG,IAAIA,GAAG,GAAG,GAA1B,CAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA6B;AAC7C,QAAMC,IAAI,GAAGF,KAAK,CAACA,KAAN,CAAYE,IAAzB;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACA,KAAN,CAAYG,GAAxB;AACA,QAAMC,GAAG,GAAGJ,KAAK,CAACA,KAAN,CAAYI,GAAxB;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACA,KAAN,CAAYK,GAAxB;AAEA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,eAAe,EAAEhB,WAAW,CAACa,GAAG,CAACZ,CAAL,EAAQY,GAAG,CAACX,CAAZ,EAAeW,GAAG,CAACV,CAAnB;AAA9B,GAAhB;AACA,QAAMc,SAAS,GAAG;AAChBR,IAAAA,KAAK,EAAEL,MAAM,CAAC,CAACU,GAAG,CAACI,CAAL,EAAQJ,GAAG,CAACK,CAAZ,EAAeL,GAAG,CAACM,CAAnB,CAAD,CAAN,GAAgC,OAAhC,GAA0C;AADjC,GAAlB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAEL,OAAnC;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,MAAML,YAAY,CAACD,KAAK,CAACY,GAAP,CAF7B;AAAA,gBAIGZ,KAAK,CAACa,MAAN,GAAe,QAAf,GAA0B;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAoC,QAAA,KAAK,EAAEL,SAA3C;AAAA,kBACGN;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAmC,QAAA,KAAK,EAAEM,SAA1C;AAAA,kBACGL;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7BD;;KAAMJ,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUnlock, faLock } from '@fortawesome/free-solid-svg-icons';\nimport { PalettesContext } from '../PalettesContext';\n\nconst toHslString = (h, s, l) => `hsl(${h}, ${s}%, ${l}%)`;\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst ColorCell = ({ color, toggleLocked }) => {\n  const name = color.color.name;\n  const hex = color.color.hex;\n  const hsl = color.color.hsl;\n  const rgb = color.color.rgb;\n\n  const bgStyle = { backgroundColor: toHslString(hsl.h, hsl.s, hsl.l) };\n  const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black',\n  };\n\n  return (\n    <div className='color-cell' style={bgStyle}>\n      <button\n        className='btn toggle-locked-btn'\n        onClick={() => toggleLocked(color.num)}\n      >\n        {color.locked ? 'Unlock' : 'Lock'}\n      </button>\n      <div className='info-container'>\n        <p className='info-container__name' style={textStyle}>\n          {name}\n        </p>\n        <p className='info-container__hex' style={textStyle}>\n          {hex}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorCell;\n"]},"metadata":{},"sourceType":"module"}