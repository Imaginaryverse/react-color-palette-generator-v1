{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/ColorCell.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst toHslString = (h, s, l) => `hsl(${h}, ${s}%, ${l}%)`;\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst ColorCell = ({\n  color\n}) => {\n  const name = color.color.name;\n  const hex = color.color.hex;\n  const hsl = color.color.hsl;\n  const rgb = color.color.rgb;\n  const bgStyle = {\n    backgroundColor: toHslString(hsl.h, hsl.s, hsl.l)\n  };\n  const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-cell\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: hex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ColorCell;\nexport default ColorCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorCell\");","map":{"version":3,"sources":["/Users/saltdev/Dev/react-color-palette-generator-v1/client/src/components/ColorCell.js"],"names":["React","toHslString","h","s","l","isDark","rgbArr","every","val","ColorCell","color","name","hex","hsl","rgb","bgStyle","backgroundColor","textStyle","r","g","b"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAc,OAAMF,CAAE,KAAIC,CAAE,MAAKC,CAAE,IAAvD;;AAEA,MAAMC,MAAM,GAAGC,MAAM,IAAIA,MAAM,CAACC,KAAP,CAAaC,GAAG,IAAIA,GAAG,GAAG,GAA1B,CAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACA,KAAN,CAAYC,IAAzB;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACA,KAAN,CAAYE,GAAxB;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACA,KAAN,CAAYG,GAAxB;AACA,QAAMC,GAAG,GAAGJ,KAAK,CAACA,KAAN,CAAYI,GAAxB;AAEA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,eAAe,EAAEf,WAAW,CAACY,GAAG,CAACX,CAAL,EAAQW,GAAG,CAACV,CAAZ,EAAeU,GAAG,CAACT,CAAnB;AAA9B,GAAhB;AACA,QAAMa,SAAS,GAAG;AAChBP,IAAAA,KAAK,EAAEL,MAAM,CAAC,CAACS,GAAG,CAACI,CAAL,EAAQJ,GAAG,CAACK,CAAZ,EAAeL,GAAG,CAACM,CAAnB,CAAD,CAAN,GAAgC,OAAhC,GAA0C;AADjC,GAAlB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAEL,OAAnC;AAAA,4BACE;AAAG,MAAA,KAAK,EAAEE,SAAV;AAAA,gBAAsBN;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,KAAK,EAAEM,SAAV;AAAA,gBAAsBL;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjBD;;KAAMH,S;AAmBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nconst toHslString = (h, s, l) => `hsl(${h}, ${s}%, ${l}%)`;\n\nconst isDark = rgbArr => rgbArr.every(val => val < 180);\n\nconst ColorCell = ({ color }) => {\n  const name = color.color.name;\n  const hex = color.color.hex;\n  const hsl = color.color.hsl;\n  const rgb = color.color.rgb;\n\n  const bgStyle = { backgroundColor: toHslString(hsl.h, hsl.s, hsl.l) };\n  const textStyle = {\n    color: isDark([rgb.r, rgb.g, rgb.b]) ? 'white' : 'black',\n  };\n\n  return (\n    <div className='color-cell' style={bgStyle}>\n      <p style={textStyle}>{name}</p>\n      <p style={textStyle}>{hex}</p>\n    </div>\n  );\n};\n\nexport default ColorCell;\n"]},"metadata":{},"sourceType":"module"}